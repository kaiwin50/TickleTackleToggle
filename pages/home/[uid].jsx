import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { css } from 'styled-components'
import { Container } from '@/components/Container'
import { Button } from '@/components/Button'
import { useState, useEffect } from 'react'
import { useRouter } from 'next/router'
import { io } from 'socket.io-client'

let socket;

const style = css`
  ul{
    list-style-type: none;
    justify-content: center;
    align-items: center;
    width: fit-content;
    margin: auto;
  }
  li {
    display: inline-flex;
    margin-left: 1em;
    margin-right: 1em;
  }
`

export default function Home() {
  const router = useRouter();
  const { uid } = router.query;
  
  const [ allMessages, setAllMessages ] = useState([]);
  const [ msg, setMsg ] = useState('');
  const [user , setUser] = useState({});
  const username = user.username;
  const [timer , setTimer] = useState('') ;
  const { db } = require('../api/firebaseSetup')
  const { collection, doc, getDoc } = require('firebase/firestore')
  async function fetchUserInfo() {
    if(uid == undefined){
      router.reload
    }
    const userDoc = await getDoc(doc(collection(db, "users"), uid));
    setUser(userDoc.data())
  } 
  useEffect(() => {
    fetchUserInfo()
    socketInitializer();
    return () => {
      socket.disconnect();
    };
  }, []);
  
  async function socketInitializer (){
    await fetch('../api/socket');
    socket = io('https://singular-starburst-49373c.netlify.app')
    
    socket.on('receive-message', data => {
      setAllMessages((pre) => [...pre, data]);
      console.log(data)
    })
  }
  function handleSubmit(e) {
    e.preventDefault();

    console.log("emitted");

    socket.emit("send-message", { username, msg });
    setMsg("");
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
        <style>{ style }</style>
      </Head>
      <main className={styles.main}>
        <Container width="80%">
          <h1>{ user.username }</h1>
        </Container>
        <Container>
          {/* <Container width="80%"> { allMessages }</Container> */}
          <Container width="80%"> { allMessages.map(({username, msg}, index) => (<div key={index}>{username}: {msg}</div>))}</Container>
          <form onSubmit={ handleSubmit }>
            <input type="text" onChange={ (e)=>( setMsg(e.target.value) ) } />
          </form>
        </Container>
      </main>
    </>
  )
}
